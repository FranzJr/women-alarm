{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEnB;;;AAEpC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6CAAS;KACrB;CACF,CAAC;AAMK,MAAM,sBAAsB;;4FAAtB,sBAAsB;mHAAtB,sBAAsB;uHAHxB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,sBAAsB,oFAFvB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACbuB;AACF;AACA;AAET;AAC4B;;AAazD,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAVb;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;mIAKU,WAAW,mBAHpB,6CAAS,aANT,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,yEAAsB;;;;;;;;;;;;;;;;;;;;ACXe;AAEY;AAGL;;;;;;AASzC,MAAM,SAAS;IAIpB,YACS,QAAkB,EAClB,MAAc,EACd,IAAoB;QAFpB,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAgB;QAN7B,UAAK,GAAgB,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QACpD,cAAS,GAAG,KAAK,CAAC;IAMd,CAAC;IAEL,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SACvC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;;kEA7BU,SAAS;uGAAT,SAAS;;QChBtB,iFAA8B;QAE5B,oEAAoD;QAOpD,yEAA6B;QAC3B,oEAAmD;QACrD,4DAAM;QAEN,6EAAqC;QAGpB,0LAA4B;QAEvC,4DAAY;QAGd,gFAAyB;QAErB,0FACF;QAAA,4DAAI;QAGN,gFAAuB;QACV,0LAA4B;QAEvC,4DAAY;QAGd,gFAAyB;QAErB,0FACF;QAAA,4DAAI;QAEN,2EAAyB;QACpB,6HAAS,YAAQ,IAAC;QAAC,yFAAwB;QAAA,4DAAI;QAItD,2EAAS;QAEO,sIAAS,cAAU,IAAC;QAA6C,sEAAU;QAAA,4DAAa;QAGxG,2EAAS;QAEO,kRAAS,gBAAkB,IAAC;QAA6C,mEAAO;QAAA,4DAAa;;;;QAlC9F,2DAA4B;QAA5B,uFAA4B;QAMpC,0DAAgD;QAAhD,wGAAgD;QAMxC,0DAA4B;QAA5B,uFAA4B;QAMpC,0DAAgD;QAAhD,wGAAgD","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.ts","./src/app/pages/login/login.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginPage } from './login';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login';\nimport { LoginPageRoutingModule } from './login-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [\n    LoginPage,\n  ]\n})\nexport class LoginModule { }\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UserData } from '../../providers/user-data';\n\nimport { UserOptions } from '../../interfaces/user-options';\nimport { MenuController } from '@ionic/angular';\n\n\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  styleUrls: ['./login.scss'],\n})\nexport class LoginPage {\n  login: UserOptions = { username: '', password: '' };\n  submitted = false;\n\n  constructor(\n    public userData: UserData,\n    public router: Router,\n    public menu: MenuController\n  ) { }\n\n  ionViewWillEnter() {\n    this.menu.enable(false);\n  }\n\n  onLogin(form: NgForm) {\n    this.submitted = true;\n\n    if (form.valid) {\n      this.userData.login(this.login.username);\n      this.router.navigateByUrl('/periodo');\n    }\n  }\n\n  onSignup() {\n    this.router.navigateByUrl('/signup');\n  }\n\n  olvido() {\n    this.router.navigateByUrl('/olvido');\n  }\n}\n","<ion-content class=\"bg-image\">\n\n  <img src=\"assets/img/bg.png\" alt=\"bg\" class=\"bg-wa\">\n  <img src=\"assets/img/left.png\" alt=\"bg\" class=\"bg-wa-left\">\n  <img src=\"assets/img/right.png\" alt=\"bg\" class=\"bg-wa-right\">\n\n  <img src=\"assets/img/left-web.png\" alt=\"bg\" class=\"bg-wa-left-web\">\n  <img src=\"assets/img/right-web.png\" alt=\"bg\" class=\"bg-wa-right-web\">\n\n  <div class=\"login-logo mt-5\">\n    <img src=\"assets/img/appicon.svg\" alt=\"Ionic logo\">\n  </div>\n\n  <form #loginForm=\"ngForm\" novalidate>\n    <ion-list >\n      <ion-item lines=\"none\">\n        <ion-input [(ngModel)]=\"login.username\" name=\"username\" type=\"text\" #username=\"ngModel\" spellcheck=\"false\"\n          autocapitalize=\"off\" required placeholder=\"Email o Usuario\" autocomplete=\"off\">\n        </ion-input>\n      </ion-item>\n\n      <ion-text color=\"danger\">\n        <p [hidden]=\"username.valid || submitted === false\" class=\"ion-padding-start\">\n          Email o Usuario es requerido\n        </p>\n      </ion-text>\n\n      <ion-item lines=\"none\">\n        <ion-input [(ngModel)]=\"login.password\" name=\"password\" type=\"password\" #password=\"ngModel\" required\n          placeholder=\"Contraseña\" autocomplete=\"off\">\n        </ion-input>\n      </ion-item>\n\n      <ion-text color=\"danger\">\n        <p [hidden]=\"password.valid || submitted === false\" class=\"ion-padding-start\">\n          Contraseña es requerida\n        </p>\n      </ion-text>\n      <div class=\"text-forgot\">\n        <a (click)=\"olvido()\">Olvidaste tu contraseña?</a>  \n      </div>      \n    </ion-list>\n\n    <ion-row>\n      <ion-col>\n        <ion-button (click)=\"onSignup()\" type=\"submit\" expand=\"block\" class=\"btn-wa\">Registrate</ion-button>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-button (click)=\"onLogin(loginForm)\" color=\"light\" expand=\"block\" class=\"btn-wa\">Ingresa</ion-button>\n      </ion-col>\n    </ion-row>\n  </form>\n\n</ion-content>"],"names":[],"sourceRoot":"webpack:///"}