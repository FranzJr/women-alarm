{"version":3,"file":"src_app_pages_metodo_metodo_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEZ;;;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAU;KACtB;CACF,CAAC;AAMK,MAAM,uBAAuB;;8FAAvB,uBAAuB;oHAAvB,uBAAuB;wHAHzB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,uBAAuB,oFAFxB,yDAAY;;;;;;;;;;;;;;;;;;;;;;ACbuB;AACF;AAEA;AAEqB;AAEvB;AACkD;;AAYtF,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHATlB;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,2EAAuB;YACvB,kGAAuB;SACxB;mIAGU,gBAAgB,mBAFZ,oDAAU,aANvB,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,2EAAuB;QACvB,kGAAuB;;;;;;;;;;;;;;;;;;;;;;;AChBc;;;;;;;;;;ICOrC,uEAAkC;IAAA,0FAA0B;IAAA,4DAAI;;;IAGlE,0EAAwB;IAEiB,oEAAS;IAAA,4DAAoB;IAClE,uFAAuC;IAAA,sEAAW;IAAA,4DAAoB;IACtE,wFAAqC;IAAA,oEAAS;IAAA,4DAAoB;;;IAMpE,uEAAkC;IAAA,iEAAM;IAAA,4DAAI;;;IAG9C,0EAAwB;IAEc,iEAAM;IAAA,4DAAoB;IAC5D,wFAAmC;IAAA,kEAAO;IAAA,4DAAoB;IAC9D,wFAAiC;IAAA,gEAAK;IAAA,4DAAoB;;;IAQ9D,0EAAwB;IAEpB,qEAAgD;IAClD,4DAAU;;;IAGZ,0EAAuB;IAEnB,qEAAoD;IACtD,4DAAU;;;;IAKR,iFAA4F;IAArB,oSAAS,iBAAU,IAAC;IAAC,gEAAK;IAAA,4DAAa;;;;IAC9G,iFAA2F;IAArB,sSAAS,kBAAU,IAAC;IAAC,oFACnF;IAAA,4DAAa;;AD5CpB,MAAM,UAAU;IAErB,YAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAC1B,UAAK,GAAG,KAAK,CAAC;IADgB,CAAC;IAGtC,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;;oEAVU,UAAU;wGAAV,UAAU;QCRvB,0EAA6B;QAE7B,iFAA4B;QAC1B,4EAAoD;QAEpD,2EAAU;QACkB,oEAAS;QAAA,4DAAK;QACxC,oEAAG;QAAA,gGAAgC;QAAA,4DAAI;QACvC,kGAAgE;QAClE,4DAAW;QAEX,8GAMU;QAEV,4EAAU;QACL,+EAAmB;QAAA,4DAAI;QAC1B,oGAA4C;QAC9C,4DAAW;QAEX,gHAMU;QAEV,4EAAU;QACL,oGAAmC;QAAA,4DAAI;QAG5C,gHAIU;QAEV,gHAIU;QAEV,2EAAS;QAEL,sHAA8G;QAC9G,sHACqB;QACvB,4DAAU;QAGZ,gFAA0D;QAK5D,4DAAc;;QA1DC,0DAAwB;QAAxB,iFAAwB;QAK/B,0DAAW;QAAX,2EAAW;QAGP,0DAAY;QAAZ,4EAAY;QAUhB,0DAAW;QAAX,2EAAW;QAGP,0DAAY;QAAZ,4EAAY;QAYZ,0DAAY;QAAZ,4EAAY;QAMZ,0DAAW;QAAX,2EAAW;QAQJ,0DAAY;QAAZ,4EAAY;QACZ,0DAAW;QAAX,2EAAW;QAKZ,0DAAwB;QAAxB,iFAAwB;QACrB,0DAAwB;QAAxB,iFAAwB","sources":["./src/app/pages/metodo/metodo-routing.module.ts","./src/app/pages/metodo/metodo.module.ts","./src/app/pages/metodo/metodo.page.ts","./src/app/pages/metodo/metodo.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MetodoPage } from './metodo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MetodoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MetodoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MetodoPageRoutingModule } from './metodo-routing.module';\n\nimport { MetodoPage } from './metodo.page';\nimport { GenericComponentsModule } from '../../generic-components/generic-components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MetodoPageRoutingModule,\n    GenericComponentsModule\n  ],\n  declarations: [MetodoPage]\n})\nexport class MetodoPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-metodo',\n  templateUrl: './metodo.page.html',\n  styleUrls: ['./metodo.page.scss'],\n})\nexport class MetodoPage implements OnInit {\n\n  constructor(public router: Router) { }\n  public listo = false;\n\n  ngOnInit() {\n  }\n\n  setListo(){\n    this.listo = !this.listo;\n  }\n\n}\n","<app-top-menu></app-top-menu>\n\n<ion-content class=\"center\">\n  <app-wa-menu [current]=\"'planificar'\"></app-wa-menu>\n\n  <ion-text>\n    <h1 class=\"color-primary\">Mi Metodo</h1>\n    <p>Elije tu metodo de planificación</p>\n    <p *ngIf=\"listo\" class=\"subtitle\">Pastillas de planificación</p>\n  </ion-text>\n\n  <ion-row *ngIf=\"!listo\">\n    <ion-select interface=\"popover\" placeholder=\"Selecione metodo\">\n      <ion-select-option value=\"pastillas\">Pastillas</ion-select-option>\n      <ion-select-option value=\"dispositivo\">Dispositivo</ion-select-option>\n      <ion-select-option value=\"injeccion\">Injeccion</ion-select-option>\n    </ion-select>\n  </ion-row>\n\n  <ion-text>\n    <p>Elige la periocidad</p>\n    <p *ngIf=\"listo\" class=\"subtitle\">Diario</p>\n  </ion-text>\n\n  <ion-row *ngIf=\"!listo\">\n    <ion-select interface=\"popover\" placeholder=\"Selecione periocidad\">\n      <ion-select-option value=\"diario\">Diario</ion-select-option>\n      <ion-select-option value=\"mensual\">Mensual</ion-select-option>\n      <ion-select-option value=\"anual\">Anual</ion-select-option>\n    </ion-select>\n  </ion-row>\n\n  <ion-text>\n    <p>Elije como te hace sentir tu método</p>\n  </ion-text>\n\n  <ion-row *ngIf=\"!listo\">\n    <ion-col>\n      <img src=\"assets/img/faces.png\" alt=\"Periodo\" />\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf=\"listo\">\n    <ion-col>\n      <img src=\"assets/img/icons/feliz.png\" alt=\"feliz\" />\n    </ion-col>\n  </ion-row>\n\n  <ion-row>\n    <ion-col>\n      <ion-button *ngIf=\"!listo\" type=\"submit\" expand=\"block\" class=\"btn-wa\" (click)=\"setListo()\">Listo</ion-button>\n      <ion-button *ngIf=\"listo\" type=\"submit\" expand=\"block\" class=\"btn-wa\" (click)=\"setListo()\">Ingresa nuevo\n        método</ion-button>\n    </ion-col>\n  </ion-row>\n\n  <app-alarm-menu [current]=\"'planificar'\"></app-alarm-menu>\n  <app-web-left-menu [current]=\"'planificar'\"></app-web-left-menu>\n\n\n  <hr />\n</ion-content>"],"names":[],"sourceRoot":"webpack:///"}